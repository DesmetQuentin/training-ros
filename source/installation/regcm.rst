Install RegCM
=============

To install RegCM, we will follow these four steps:
**bootstrap**, **configure**, **compile**, and **install**.

First, **retrieve the model's source code** and get to its directory:

.. code:: bash

   bash $TRAINING/scripts/prepare_regcm.sh
   cd $REGCM


**Bootstrap** the installation process with the following:

.. code:: bash

   ./bootstrap.sh


This should generate the ``configure`` program based on ``configure.ac``. This program
will **configure** the maker, i.e, generating all Makefiles necessary for the
installation, based on your environment and a number of optional arguments. You may run
``./configure --help`` to see all possible options. In our case, we will use the two
configurations below, but for now, only run the OASIS-enabled version.

.. tab-set::

   .. tab-item:: OASIS-enabled

      .. tab-set::

         .. tab-item:: CALMIP

            .. code:: bash

               ./configure FC=ifort --enable-clm45 --enable-pnetcdf --enable-oasis --with-oasis-path=$OASIS/intel18_calmip


         .. tab-item:: HILO

            .. code:: bash

               ./configure FC=ifort --enable-clm45 --enable-oasis --with-oasis-path=$OASIS/intel19_hilo


   .. tab-item:: OASIS-disabled

      .. tab-set::

         .. tab-item:: CALMIP

            .. code:: bash

               ./configure FC=ifort --enable-clm45 --enable-pnetcdf


         .. tab-item:: HILO

            .. code:: bash

               ./configure FC=ifort --enable-clm45


.. tip::

   You can compile RegCM with debugging flags by providing the ``--enable-debug``
   argument to ``configure``.


Then, **compilation** can be started by typing:

.. code:: bash

   make


This may take several minutes. After that, you can proceed to the **installation** with:

.. code:: bash

   make install


Once this is finished, you should see many executables in ``$REGCM/bin``:

.. code:: console

   average                    icbcCLM45_OASIS              pgwbcCLM45_OASIS
   chem_icbcCLM45_OASIS       interp_bionox                pgw_icbcCLM45_OASIS
   clm45_1dto2dCLM45_OASIS    interp_dustparam             regcmMPICLM45_OASIS
   clmbcCLM45_OASIS           interp_emissions             regrid
   clmsaMPICLM45_OASIS        interp_emissions_bioburn.sh  sigma2pCLM45_OASIS
   emcre_gridCLM45_OASIS      interpinicCLM45_OASIS        sigma2zCLM45_OASIS
   GrADSNcPlotCLM45_OASIS     interp_pollen                sstCLM45_OASIS
   GrADSNcPrepareCLM45_OASIS  mksurfdataCLM45_OASIS        terrainCLM45_OASIS


Some are for preprocessing, some are postprocessing tools, while the ``regcmMPI*``
program is the main executable.

Notice how the options we gave to ``configure`` are now suffixes of most executables
(those which actually depend on those options). This allows you to conduct the
installation procedure several times with various options, without loosing previous
installation programs.


.. admonition:: Cleaning commands

   RegCM's Makefile provide two cleaning commands:

   .. tab-set::

      .. tab-item:: Clean

         .. code:: bash

            make clean


         removes all compilation results to allow you running ``make`` from scratch, but
         based on the same configuration as initially chosen through the ``configure``
         program.


      .. tab-item:: Distclean

         .. code:: bash

            make distclean


         not only removes all compilation results but also the Makefiles generated by
         the ``configure`` program, such that any ``make`` command will fail after that.
         This implies that you need to start over at the configuring stage before using
         ``make`` again.


With the OASIS-enabled executable, RegCM cannot run in uncoupled mode. In order to
follow the parts of this training focusing on the standalone components, we thus **need
to install an OASIS-disabled executable as well**. To do so, make a ``distclean`` to
prepare the change of configuration, then go back to the configuration stage, follow the
OASIS-disabled tab, and continue with the same installation steps. You should finally
get new executables with a suffix in ``CLM45`` (i.e., without the additional
``_OASIS`` like for the first version).
